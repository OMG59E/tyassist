# 模型量化编译配置文件

model: {
  # 模型框架，必须设置, 支持caffe/onnx/pytorch/tensorflow/mxnet，400系列目前仅支持onnx
  framework: "",

  # 编译后模型名，缺省或不配置情况为net_combine
  name: ,

  # 量化文件以及各种过程文件保存路径
  save_dir: "",

  # 模型权重路径，必须设置
  weight: "",

  # 模型图结构定义路径，非caffe/mxnet框架模型可以不设置
  graph: "",

  # 模型输入配置，存在多个输入，注意顺序
  # 目前不能分别设置多个输入的NHWC->NCHW的转换, 必须相同
  inputs: [
    {
      name: ,  # 输入名称
      shape: , # 原模型的实际输入形状
      layout: ,  # 输入数据布局，支持 NCHW，NHWC, 默认NCHW，可缺省
      pixel_format: ,  # 像素格式，支持 None(未知), RGB，BGR，GRAY，设置为None时必须配置自定义处理模块
      mean: [ 0.0, 0.0, 0.0 ],   # 输入均值，不配置，默认为0，可缺省，支持broadcast，存在自定义预处理情况下，无须在自定义模块内进行norm
      std: [ 1.0, 1.0, 1.0 ],   # 输入方差，不配置，默认为1，可缺省，支持broadcast，存在自定义预处理情况下，无须在自定义模块内进行norm
      resize_type: 0,   # resize类型，0-长宽分别resize，1-长边等比例resize
      padding_value: 128,  # resize图像不足部分将自动padding，仅等比例resize生效
      padding_mode: 0,  # 目前仅支持 0: 左上角(LEFT_TOP), 1: 中心点(CENTER)，仅等比例resize生效
      data_path: ,  # 用于比较各阶段输出的相似度，空表示采用随机数，默认随机数，可缺省
      enable_aipp: true, # 是否使能aipp，内置输入预处理，效率更高，默认true，可缺省，注意自定义的情况下不能使能
    }
  ],

  # 存在多个输出，注意顺序，用于TensorFlow，其余可不配置
  outputs: [
    {
      name: ,
    }
  ],

  # 模型的python模块(test和demo必须设置), 必须与yml配置文件同级目录
  model_impl_module: ,
  model_impl_cls: ,
}

build: {
  # 目标平台，必须设置, 支持nnp300, nnp320, nnp3020, nnp400
  target: "",

  # 是否跳过量化过程
  # 注意disable之前必须已生成量化模型
  enable_quant: true,

  # 是否跳过编译过程
  # 注意disable之前必须已编译生成模型
  enable_build: true,

  # 量化配置参数，仅在enable_quant为true生效
  quant: {
    # 量化输入数据路径(必须设置)
    data_dir: "/DEngine/tyexamples/data/datasets/ILSVRC2012/ILSVRC2012_img_val",

    # 量化使用的数据数量，0表示使用所有数据
    prof_img_num: 50,

    # 进行check_similarity的图片的张数
    # 如果大于1，最终会输出所有图片的平均相似度
    # 如果等于0，则会处理similarity_dataset中所有图片
    similarity_img_num: 1,

    # 进行相似度比对的输入数据，配置为空，则默认取前述data_dir接口表示的输入
    # 具体配置参照dataset，可定义为图片集路径，或用户自定义的预处理。
    similarity_dataset: ,

    # 用户自定义量化函数，若不配置此项，则使用默认前处理，多输入或非1,3通道数据必须配置
    # 必须与yml配置文件同级目录
    custom_preprocess_module: ,
    custom_preprocess_cls: ,

    # 量化调试等级
    # 0 - 输出整体余弦相似度
    # 1 - 输出整体余弦相似度、输出逐层余弦相似度、逐层保存浮点模型和定点模型的数据、逐层保存浮点定点的对比PNG图
    # 2 - 输出整体余弦相似度、输出逐层余弦相似度、逐层保存浮点定点的对比PNG图
    # 3 - 输出整体余弦相似度、输出逐层余弦相似度
    #-1 - 不输出debug信息
    debug_level: 0,

    # 校准方法 "kld", "min_max", "percentile_0.99..", "l2norm"
    calib_method: "kld",

    # 可配置为op的索引，可单个配置也可组成list
    skip_layer_idxes: [ ],

    # 可配置为op的类型，可单个配置也可组成list
    skip_layer_types: [ ],   # 例子 ["nn.conv2d", "nn.conv2d"]
  },

  # 是否使能进行逐层dump结果
  # 0 - 模型不支持iss, 不输出逐层信息
  # 1 - 模型支持iss, 输出逐层信息
  # 2 - 模型支持iss, 不输出逐层信息
  enable_dump: 0,
}

# test时必须设置以下字段
test: {
  # 指定test的数据集路径(必须设置)
  data_dir: ,

  # test精度测试样例数，实际测试数为数据集内数据数与本数的较小者，不设置或者配置0为数据集内所有数据
  test_num: 0,

  # 数据集模块名(必须设置), 必须与yml配置文件同级目录
  dataset_module: ,
  dataset_cls: ,
}

demo: {
  # 指定demo的测试数据路径(必须设置)
  data_dir: ,
  
  # demo测试样例数，实际测试数为数据路径内数据数与本数的较小者，配置0为数据路径内所有数据
  num: 20,
}
